{"abi":[{"type":"function","name":"DYNAMIC_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"MAX_LP_FEE","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"OVERRIDE_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"REMOVE_OVERRIDE_MASK","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"error","name":"LPFeeTooLarge","inputs":[{"name":"fee","type":"uint24","internalType":"uint24"}]}],"bytecode":{"object":"0x6080806040523460185760d7908161001d823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633b01d64d14608c575080633fc48eba1460755780636f95ebcf14605e5763f26ef49d146043575f80fd5b5f366003190112605a576020604051628000008152f35b5f80fd5b5f366003190112605a57602060405162bfffff8152f35b5f366003190112605a576020604051620f42408152f35b5f366003190112605a57806240000060209252f3fea2646970667358221220a803b2144a09cd4f48d881cb8895c6650561ed7e78d9e89825205ac9247bed6464736f6c634300081a0033","sourceMap":"179:3428:71:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60808060405260043610156011575f80fd5b5f3560e01c9081633b01d64d14608c575080633fc48eba1460755780636f95ebcf14605e5763f26ef49d146043575f80fd5b5f366003190112605a576020604051628000008152f35b5f80fd5b5f366003190112605a57602060405162bfffff8152f35b5f366003190112605a576020604051620f42408152f35b5f366003190112605a57806240000060209252f3fea2646970667358221220a803b2144a09cd4f48d881cb8895c6650561ed7e78d9e89825205ac9247bed6464736f6c634300081a0033","sourceMap":"179:3428:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;179:3428:71;;;;;;;564:8;179:3428;;;;;;;;;;-1:-1:-1;;179:3428:71;;;;;;;987:8;179:3428;;;;;;-1:-1:-1;;179:3428:71;;;;;;;1123:7;179:3428;;;;;;-1:-1:-1;;179:3428:71;;;;;831:8;179:3428;;;","linkReferences":{}},"methodIdentifiers":{"DYNAMIC_FEE_FLAG()":"f26ef49d","MAX_LP_FEE()":"3fc48eba","OVERRIDE_FEE_FLAG()":"3b01d64d","REMOVE_OVERRIDE_MASK()":"6f95ebcf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"LPFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DYNAMIC_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LP_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OVERRIDE_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOVE_OVERRIDE_MASK\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"LPFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when the static or dynamic fee on a pool exceeds 100%.\"}]},\"kind\":\"user\",\"methods\":{\"DYNAMIC_FEE_FLAG()\":{\"notice\":\"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isnt a valid static fee as it is > MAX_LP_FEE\"},\"MAX_LP_FEE()\":{\"notice\":\"the lp fee is represented in hundredths of a bip, so the max is 100%\"},\"OVERRIDE_FEE_FLAG()\":{\"notice\":\"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap\"},\"REMOVE_OVERRIDE_MASK()\":{\"notice\":\"mask to remove the override fee flag from a fee returned by the beforeSwaphook\"}},\"notice\":\"Library of helper functions for a pools LP fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":\"LPFeeLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@chainlink/contracts-ccip/=lib/chainlink-local/lib/ccip/contracts/\",\":@chainlink/contracts/=lib/chainlink-local/lib/chainlink-brownie-contracts/contracts/\",\":@chainlink/local/src/=lib/chainlink-local/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ccip/=lib/chainlink-local/lib/ccip/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-local/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":chainlink-local/=lib/chainlink-local/src/\",\":ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"type":"error","name":"LPFeeTooLarge"},{"inputs":[],"stateMutability":"view","type":"function","name":"DYNAMIC_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_LP_FEE","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OVERRIDE_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"REMOVE_OVERRIDE_MASK","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"DYNAMIC_FEE_FLAG()":{"notice":"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isnt a valid static fee as it is > MAX_LP_FEE"},"MAX_LP_FEE()":{"notice":"the lp fee is represented in hundredths of a bip, so the max is 100%"},"OVERRIDE_FEE_FLAG()":{"notice":"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"REMOVE_OVERRIDE_MASK()":{"notice":"mask to remove the override fee flag from a fee returned by the beforeSwaphook"}},"version":1}},"settings":{"remappings":["@chainlink/contracts-ccip/=lib/chainlink-local/lib/ccip/contracts/","@chainlink/contracts/=lib/chainlink-local/lib/chainlink-brownie-contracts/contracts/","@chainlink/local/src/=lib/chainlink-local/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ccip/=lib/chainlink-local/lib/ccip/contracts/","chainlink-brownie-contracts/=lib/chainlink-local/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","chainlink-local/=lib/chainlink-local/src/","ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":"LPFeeLibrary"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895","urls":["bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495","dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f","urls":["bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382","dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"],"license":"GPL-2.0-or-later"}},"version":1},"id":71}